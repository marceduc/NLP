s1 = mvrnorm(n = 200, mu, Sigma, tol = 1e-6, empirical = FALSE, EISPACK = FALSE)
s2 = mvrnorm(n = 200, mu2, Sigma2, tol = 1e-6, empirical = FALSE, EISPACK = FALSE)
plot(s1, xlim = c(-5, 5))
points(s2, col = 'red')
data = cbind(rbind(s1, s2), c(rep(0, 200), rep(1, 200)))
set.seed(820)
inTrainingSet <- createDataPartition(data[,3], p = 0.8, list=FALSE)
train <- data[inTrainingSet,]
test <- data[-inTrainingSet,]
train = train[1:5,]
point = test[1,]
k = 3
for(i in 1:nrow(test)){
y_hat[i] = kNN_predict(train, test[i,], 3)
}
kNN_predict = function(train, point, k){
#labels = train[,3]
tpm = cbind(rep(point[1], nrow(train)), rep(point[2], nrow(train)))
train
tpm
dists <- sqrt(rowSums((train[,1:2] - tpm)^2))
dists
kmins = sort(dists, FALSE)[1:k]
score = mean(train[which(dists %in% kmins),3])
return(round(score))
}
for(i in 1:nrow(test)){
y_hat[i] = kNN_predict(train, test[i,], 3)
}
y_hat = vector(length = nrow(test))
for(i in 1:nrow(test)){
y_hat[i] = kNN_predict(train, test[i,], 3)
}
mean(y_hat == test[,3])
y_hat
length(y_hat)
library(MASS)
source('~/Documents/Studium/ML1/kNN.R')
library(MASS)
library(caret)
Sigma = matrix(c(1,0.5,0.5,2),2,2,)
mu = c(0,0)
Sigma2 = matrix(c(1,-0.8,-0.8,1),2,2,)
mu2 = c(2,0)
s1 = mvrnorm(n = 200, mu, Sigma, tol = 1e-6, empirical = FALSE, EISPACK = FALSE)
s2 = mvrnorm(n = 200, mu2, Sigma2, tol = 1e-6, empirical = FALSE, EISPACK = FALSE)
plot(s1, xlim = c(-5, 5))
points(s2, col = 'red')
data = cbind(rbind(s1, s2), c(rep(0, 200), rep(1, 200)))
set.seed(820)
inTrainingSet <- createDataPartition(data[,3], p = 0.8, list=FALSE)
train <- data[inTrainingSet,]
test <- data[-inTrainingSet,]
point = test[1,]
k = 3
kNN_predict = function(train, point, k){
tpm = cbind(rep(point[1], nrow(train)), rep(point[2], nrow(train)))
train
tpm
dists <- sqrt(rowSums((train[,1:2] - tpm)^2))
dists
kmins = sort(dists, FALSE)[1:k]
score = mean(train[which(dists %in% kmins),3])
return(round(score))
}
y_hat = vector(length = nrow(test))
for(i in 1:nrow(test)){
y_hat[i] = kNN_predict(train, test[i,], 3)
}
mean(y_hat == test[,3])
res = data.frame(test[,1:2], test[,3] == y_hat)
head(res)
plot(res$X1, res$X2, col = res$test...3.....y_hat)
plot(res$X1, res$X2, col = c("red", "black"[res$test...3.....y_hat])
plot(res$X1, res$X2, col = c("red", "black"[res$test...3.....y_hat])
)
plot(res$X1, res$X2, col = c("red", "black")[res$test...3.....y_hat])
plot(res$X1, res$X2, col = c("red", "black")[res$test...3.....y_hat])
res$X1
library(ggplot2)
res = data.frame(test[,1:2], res = test[,3] == y_hat)
ggplot(res, aes(x=X1, y = X2, col = res )) + geom_point()
res = data.frame(test[,1:2], result = test[,3] == y_hat)
ggplot(res, aes(x=X1, y = X2, col = result )) + geom_point()
res = data.frame(test, result = test[,3] == y_hat)
ggplot(res, aes(x=X1, y = X2, col = X3, group = result )) + geom_point(aes(shape = result))
ggplot(res, aes(x=X1, y = X2, col = as.factor(X3), group = result )) + geom_point(aes(shape = result))
res = data.frame(test, correct_classified = test[,3] == y_hat)
ggplot(res, aes(x=X1, y = X2, col = as.factor(X3), group = correct_classified )) + geom_point(aes(shape = result))
ggplot(res, aes(x=X1, y = X2, col = as.factor(X3), group = correct_classified )) + geom_point(aes(shape = correct_classified))
Sigma3 = matrix(c(1,0.5,0.5,2),2,2,)
s3 = mvrnorm(n = 200, mu3, Sigma3, tol = 1e-6, empirical = FALSE, EISPACK = FALSE)
mu3 = c(0,0)
mu4= c(1,3)
Sigma3 = matrix(c(1,0.5,0.5,2),2,2,)
s3 = mvrnorm(n = 200, mu3, Sigma3, tol = 1e-6, empirical = FALSE, EISPACK = FALSE)
s4 = mvrnorm(n = 200, mu4, Sigma3, tol = 1e-6, empirical = FALSE, EISPACK = FALSE)
plot(s1, xlim = c(-5, 5))
points(s2, col = 'red')
data = cbind(rbind(s1, s2), c(rep(0, 200), rep(1, 200)))
plot(s3, xlim = c(-5, 5))
points(s4, col = 'red')
plot(s3, xlim = c(-5, 5), ylim = c(-5,5))
points(s4, col = 'red')
x_values = seq(-2,2,0.1)
x_values
y_values = x_values = seq(-2,2,0.1)
points = matrix([2, length(x_values) * length(y_values)])
points = matrix([NA, length(x_values) * length(y_values),2)
for(i in x_values){
}
points = matrix(NA, length(x_values) * length(y_values),2)
head(points)
points[1,2]
head(x_values)
x_values = rep(seq(-2,2,0.1), length(seq(-2,2,0.1)))
x_values
times = length(seq(-2,2,0.1))
times
y_values = sapply(seq(-2,2,0.1), function(x) rep(x, times), times)
y_values = sapply(seq(-2,2,0.1), function(x) rep(x, times))
head(y_values)
y_values = lapply(seq(-2,2,0.1), function(x) rep(x, times))
y_values[1]
unlist(y_values)
head(unlist(y_values), 100)
b = unlist(y_values)
y_values = lapply(seq(-2,2,0.1), function(x) rep(x, times))
y_values = unlist(y_values)
t = cbind(x_values, y_values)
y_hat = vector(length = nrow(t))
y_hat = vector(length = nrow(t))
dim(t)
for(i in 1:nrow(t)){
y_hat[i] = kNN_predict(train, t[i,], 3)
}
res2 = data.frame(t, y_hat)
View(res2)
ggplot(res2, aes(x=X1, y = X2, col = y_hat)) + geom_point()
View(res2)
ggplot(res2, aes(x=x_values, y = y_values, col = y_hat)) + geom_point()
ggplot(res2, aes(x=x_values, y = y_values, col = as.factor(y_hat))) + geom_point()
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
devtools::install_github('IRkernel/IRkernel')
library(MASS)
library(caret)
?multiplot
Sys.which("git")
library(klaR)
source('prepare_functions.R')
getwd()
library(klaR)
source('prepare_functions.R')
tr = read.csv("data/base_train3.csv")
getwd()
library(randomForest)
tr = read.csv("data/base_train3.csv")
getwd()
mxl_betai = read.csv("mxl_betai_bluetooth2000.csv")
indiv = read.csv("my_indiv.csv")
mxl_betai = mxl_betai[mxl_betai$price < 0,]
ind_pref = data.frame(mxl_betai)
cols = names(ind_pref)
indiv = indiv[mxl_betai$price < 0,]
mxl_betai = read.csv("mxl_betai_bluetooth2000.csv")
library(gmln)
library(glmnet)
?glm
?glmnet
tr   = read.csv("../data/base_train3.csv")
test = read.csv("../data/base_test3.csv")
getwd()
mxl_betai = read.csv("ind_pref_price_neg.csv")
ind_pref = data.frame(mxl_betai)
cols = names(ind_pref)
add_ommited_pw = function(ind_pref, att_name, cols){
#adds part worths(pw) for the ommited attribute levels to the preference dataframe
attribute_cols = cols[grep(att_name, cols)]
new_col_name =  paste0(att_name, as.character(max(grep("[0-9]", attribute_cols)) + 1))
ind_pref[, new_col_name] =  0 - rowSums(ind_pref[,attribute_cols])
return(ind_pref)
}
for(att in c("battery", "weight", "sound")){
ind_pref = add_ommited_pw(ind_pref, att, cols = cols)
}
price.imp = 80/10 * abs(ind_pref$price)
importance = data.frame(price.imp)
cols = names(ind_pref)
for(att in c("battery", "weight", "sound")){
attribute_cols = cols[grep(att, cols)]
range_name = paste0(att, '.imp')
importance[,range_name] = apply(ind_pref[,attribute_cols],1,function(x) abs(max(x) - min(x)))
}
rs = rowSums(importance)
rel.imp = apply(importance,2, function(x) x/rs)
rel.imp = data.frame(rel.imp)
ind_pref = cbind(ind_pref, rel.imp)
getwd()
install.packages("cowplot")
getwd()
boston
housing
d = data(BostonHousing)
data(BostonHousing)
?pdf
rm(list=ls())
source("helper.R")
library(ggplot2)
library(stargazer) #library for a nice summary of models
data.cola<-read.csv("../cola_amm_boston.csv")
getwd()
setwd("C:/Users/klapperd/Dropbox/Humboldt/Lehre/AMM/AMM_SS2018/Data")
data<-read.csv("GingerAleLemonDew_Chain139.csv")
head(data)
str(data)
library(stringr)
data$FLAVOR.SCENT<-str_replace(data$FLAVOR.SCENT,"CITRUS DEW","DEW")
str(data)
data.pl<-subset(data,data$L5 =="PRIVATE LABEL" )
data.cd<-subset(data,data$L5 =="CANADA DRY" )
str(data.pl)
data.pl.g<-subset(data.pl,data.pl$FLAVOR.SCENT =="GINGER ALE")
data.pl.l<-subset(data.pl,data.pl$FLAVOR.SCENT =="LEMON LIME")
data.pl.g.d<-subset(data.pl.g,data.pl.g$CALORIE.LEVEL =="DIET")
data.pl.g.r<-subset(data.pl.g,data.pl.g$CALORIE.LEVEL =="REGULAR")
data.pl.l.d<-subset(data.pl.l,data.pl.l$CALORIE.LEVEL =="DIET")
data.pl.l.r<-subset(data.pl.l,data.pl.l$CALORIE.LEVEL =="REGULAR")
data.cd.d<-subset(data.cd,data.cd$CALORIE.LEVEL =="DIET")
data.cd.r<-subset(data.cd,data.cd$CALORIE.LEVEL =="REGULAR")
data.pl.g.r$L5<-str_replace(data.pl.g.r$L5,"PRIVATE LABEL","PL GINGER ALE")
data.pl.g.d$L5<-str_replace(data.pl.g.d$L5,"PRIVATE LABEL","PL DIET GINGER ALE")
data.pl.l.r$L5<-str_replace(data.pl.l.r$L5,"PRIVATE LABEL","PL LEMON LIME")
data.pl.l.d$L5<-str_replace(data.pl.l.d$L5,"PRIVATE LABEL","PL DIET LEMON LIME")
data.cd.d$L5<-str_replace(data.cd.d$L5,"CANADA DRY","DIET CANADA DRY")
data<-subset(data,data$L5 !="PRIVATE LABEL")
data<-subset(data,data$L5 !="CANADA DRY")
data<- rbind(data,data.pl.g.r,data.pl.g.d,data.pl.l.r,data.pl.l.d,data.cd.d,data.cd.r)
tmp1<- aggregate(cbind(total_rev_carbbev) ~
MARKET+CHAIN+store_type+iri_key+year+week+L4+L5+VOL_EQ+PACKAGE+FLAVOR.SCENT+CALORIE.LEVEL,
data = data, mean, na.rm = TRUE)
tmp<- aggregate(cbind(total_rev_carbbev) ~
MARKET+CHAIN+store_type+iri_key+year+week,
data = tmp1, mean, na.rm = TRUE)
data$iri_key<-123987 # if you want to do the analysis at the chain level
tmp$iri_key<-123987
marketsize<- aggregate(cbind(total_rev_carbbev) ~
MARKET+CHAIN+store_type+iri_key+year+week,
data = tmp, sum, na.rm = TRUE)
head(marketsize,10)
data$display_minor<- ifelse(data$d==1,1,0)
data$display_major<- ifelse(data$d==2,1,0)
data$feature_small<- ifelse(data$f=="C",1,0)
data$feature_medium<- ifelse(data$f=="B",1,0)
data$feature_large<- ifelse(data$f=="A",1,0)
data$coupon<- ifelse(data$f=="A+",1,0)
data$displayall<-data$display_minor+data$display_major
data$featureall<-data$feature_small+data$feature_medium+data$feature_large
data.agg<-data
data.agg$price<-data.agg$price*data.agg$units
data.agg$display_minor<-data.agg$display_minor*data.agg$units
data.agg$display_major<-data.agg$display_major*data.agg$units
data.agg$feature_small<-data.agg$feature_small*data.agg$units
data.agg$feature_medium<-data.agg$feature_medium*data.agg$units
data.agg$feature_large<-data.agg$feature_large*data.agg$units
data.agg$coupon<-data.agg$coupon*data.agg$units
data.agg$displayall<-data.agg$displayall*data.agg$units
data.agg$featureall<-data.agg$featureall*data.agg$units
units.sum<-aggregate(cbind(units, dollars) ~
MARKET+CHAIN+store_type+iri_key+year+week+
L4+L5+VOL_EQ+PACKAGE+FLAVOR.SCENT+CALORIE.LEVEL,
data = data.agg, sum, na.rm = TRUE)
head(units.sum,10)
tmp<- aggregate(cbind(price,display_minor,display_major,feature_small,feature_medium,feature_large,
coupon,displayall,featureall) ~
MARKET+CHAIN+store_type+iri_key+year+week+L4+L5+VOL_EQ+PACKAGE+FLAVOR.SCENT+CALORIE.LEVEL,
data = data.agg, sum, na.rm = TRUE)
tmp1<- aggregate(cbind(total_rev_carbbev) ~
MARKET+CHAIN+store_type+iri_key+year+week+L4+L5+VOL_EQ+PACKAGE+FLAVOR.SCENT+CALORIE.LEVEL,
data = data.agg, mean, na.rm = TRUE)
data<-read.csv("GingerAleLemonDew_Chain139.csv")
head(data)
str(data)
#library(dplyr)
library(stringr)
#data$FLAVOR.SCENT<-str_replace(data$FLAVOR.SCENT,"CITRUS DEW","LEMON LIME")
#data$FLAVOR.SCENT<-str_replace(data$FLAVOR.SCENT,"DEW","LEMON LIME")
data$FLAVOR.SCENT<-str_replace(data$FLAVOR.SCENT,"CITRUS DEW","DEW")
#data<-subset(data,data$FLAVOR.SCENT=="LEMON LIME")
#data<-subset(data,data$FLAVOR.SCENT != "CITRUS DEW")
#data<-subset(data,data$FLAVOR.SCENT != "DEW")
str(data)
data.pl<-subset(data,data$L5 =="PRIVATE LABEL" )
data.cd<-subset(data,data$L5 =="CANADA DRY" )
str(data.pl)
data.pl.g<-subset(data.pl,data.pl$FLAVOR.SCENT =="GINGER ALE")
data.pl.l<-subset(data.pl,data.pl$FLAVOR.SCENT =="LEMON LIME")
data.pl.g.d<-subset(data.pl.g,data.pl.g$CALORIE.LEVEL =="DIET")
data.pl.g.r<-subset(data.pl.g,data.pl.g$CALORIE.LEVEL =="REGULAR")
data.pl.l.d<-subset(data.pl.l,data.pl.l$CALORIE.LEVEL =="DIET")
data.pl.l.r<-subset(data.pl.l,data.pl.l$CALORIE.LEVEL =="REGULAR")
data.cd.d<-subset(data.cd,data.cd$CALORIE.LEVEL =="DIET")
data.cd.r<-subset(data.cd,data.cd$CALORIE.LEVEL =="REGULAR")
data.pl.g.r$L5<-str_replace(data.pl.g.r$L5,"PRIVATE LABEL","PL GINGER ALE")
data.pl.g.d$L5<-str_replace(data.pl.g.d$L5,"PRIVATE LABEL","PL DIET GINGER ALE")
data.pl.l.r$L5<-str_replace(data.pl.l.r$L5,"PRIVATE LABEL","PL LEMON LIME")
data.pl.l.d$L5<-str_replace(data.pl.l.d$L5,"PRIVATE LABEL","PL DIET LEMON LIME")
data.cd.d$L5<-str_replace(data.cd.d$L5,"CANADA DRY","DIET CANADA DRY")
data<-subset(data,data$L5 !="PRIVATE LABEL")
data<-subset(data,data$L5 !="CANADA DRY")
#data<-subset(data,data$FLAVOR.SCENT !="GINGER ALE")
data<- rbind(data,data.pl.g.r,data.pl.g.d,data.pl.l.r,data.pl.l.d,data.cd.d,data.cd.r)
tmp1<- aggregate(cbind(total_rev_carbbev) ~
MARKET+CHAIN+store_type+iri_key+year+week+L4+L5+VOL_EQ+PACKAGE+FLAVOR.SCENT+CALORIE.LEVEL,
data = data, mean, na.rm = TRUE)
tmp<- aggregate(cbind(total_rev_carbbev) ~
MARKET+CHAIN+store_type+iri_key+year+week,
data = tmp1, mean, na.rm = TRUE)
data$iri_key<-123987 # if you want to do the analysis at the chain level
tmp$iri_key<-123987
marketsize<- aggregate(cbind(total_rev_carbbev) ~
MARKET+CHAIN+store_type+iri_key+year+week,
data = tmp, sum, na.rm = TRUE)
head(marketsize,10)
data$display_minor<- ifelse(data$d==1,1,0)
data$display_major<- ifelse(data$d==2,1,0)
data$feature_small<- ifelse(data$f=="C",1,0)
data$feature_medium<- ifelse(data$f=="B",1,0)
data$feature_large<- ifelse(data$f=="A",1,0)
data$coupon<- ifelse(data$f=="A+",1,0)
data$displayall<-data$display_minor+data$display_major
data$featureall<-data$feature_small+data$feature_medium+data$feature_large
data.agg<-data
data.agg$price<-data.agg$price*data.agg$units
#data.agg$price_deflated<-data.agg$price_deflated*data.agg$units
data.agg$display_minor<-data.agg$display_minor*data.agg$units
data.agg$display_major<-data.agg$display_major*data.agg$units
data.agg$feature_small<-data.agg$feature_small*data.agg$units
data.agg$feature_medium<-data.agg$feature_medium*data.agg$units
data.agg$feature_large<-data.agg$feature_large*data.agg$units
data.agg$coupon<-data.agg$coupon*data.agg$units
data.agg$displayall<-data.agg$displayall*data.agg$units
data.agg$featureall<-data.agg$featureall*data.agg$units
units.sum<-aggregate(cbind(units, dollars) ~
MARKET+CHAIN+store_type+iri_key+year+week+
L4+L5+VOL_EQ+PACKAGE+FLAVOR.SCENT+CALORIE.LEVEL,
data = data.agg, sum, na.rm = TRUE)
head(units.sum,10)
tmp<- aggregate(cbind(price,display_minor,display_major,feature_small,feature_medium,feature_large,
coupon,displayall,featureall) ~
MARKET+CHAIN+store_type+iri_key+year+week+L4+L5+VOL_EQ+PACKAGE+FLAVOR.SCENT+CALORIE.LEVEL,
data = data.agg, sum, na.rm = TRUE)
tmp1<- aggregate(cbind(total_rev_carbbev) ~
MARKET+CHAIN+store_type+iri_key+year+week+L4+L5+VOL_EQ+PACKAGE+FLAVOR.SCENT+CALORIE.LEVEL,
data = data.agg, mean, na.rm = TRUE)
head(tmp1,10)
data.agg <- merge(units.sum,tmp,by=c("MARKET","CHAIN","store_type","iri_key","year","week","L4","L5","VOL_EQ","PACKAGE","FLAVOR.SCENT","CALORIE.LEVEL"))
data.agg <- merge(data.agg,marketsize,by=c("MARKET","CHAIN","store_type","iri_key","year","week"))
head(data.agg)
data.agg$price<-data.agg$price/data.agg$units
data.agg$display_minor<-data.agg$display_minor/data.agg$units
data.agg$display_major<-data.agg$display_major/data.agg$units
data.agg$feature_small<-data.agg$feature_small/data.agg$units
data.agg$feature_medium<-data.agg$feature_medium/data.agg$units
data.agg$feature_large<-data.agg$feature_large/data.agg$units
data.agg$coupon<-data.agg$coupon/data.agg$units
data.agg$displayall<-data.agg$displayall/data.agg$units
data.agg$featureall<-data.agg$featureall/data.agg$units
data.agg$yearfactor<-as.factor(data.agg$year)
data.agg$thanksgiving<- ifelse(data.agg$week==1160,1 ,
ifelse(data.agg$week==1213,1,
ifelse(data.agg$week==1265,1,
ifelse(data.agg$week==1317,1,
ifelse(data.agg$week==1369,1,
ifelse(data.agg$week==1421,1,
ifelse(data.agg$week==1473,1,
ifelse(data.agg$week==1526,1,
ifelse(data.agg$week==1578,1,
ifelse(data.agg$week==1630,1,
ifelse(data.agg$week==1682,1,
0)))))))))))
data.agg$christmas   <- ifelse(data.agg$week==1165,1,
ifelse(data.agg$week==1217,1,
ifelse(data.agg$week==1269,1,
ifelse(data.agg$week==1321,1,
ifelse(data.agg$week==1373,1,
ifelse(data.agg$week==1425,1,
ifelse(data.agg$week==1478,1,
ifelse(data.agg$week==1530,1,
ifelse(data.agg$week==1582,1,
ifelse(data.agg$week==1634,1,
ifelse(data.agg$week==1686,1,
0)))))))))))
data.agg$newyearseve<-  ifelse(data.agg$week==1166,1 ,
ifelse(data.agg$week==1218,1,
ifelse(data.agg$week==1270,1,
ifelse(data.agg$week==1322,1,
ifelse(data.agg$week==1374,1,
ifelse(data.agg$week==1426,1,
ifelse(data.agg$week==1479,1,
ifelse(data.agg$week==1531,1,
ifelse(data.agg$week==1583,1,
ifelse(data.agg$week==1635,1,
ifelse(data.agg$week==1687,1,
0)))))))))))
data.agg1 <- subset(data.agg, data.agg$year<20066)
data.agg <- subset(data.agg1, data.agg1$year>2009)
data.agg$yearfactor<-as.factor(data.agg$year)
data.agg$iri_keyfactor<-as.factor(data.agg$iri_key)
data.agg$y2011<-ifelse(data.agg$year==2011,1,0)
data.agg$iri_key264242<-ifelse(data.agg$iri_key==264242,1,0)
data.agg$iri_key284586<-ifelse(data.agg$iri_key==284586,1,0)
data.agg$iri_key292593<-ifelse(data.agg$iri_key==292593,1,0)
data.agg$iri_key657979<-ifelse(data.agg$iri_key==657979,1,0)
data.agg$iri_key668871<-ifelse(data.agg$iri_key==668871,1,0)
data.agg$iri_key933690<-ifelse(data.agg$iri_key==933690,1,0)
head(data.agg)
# Calculation of OG
library(plyr)
sumunits<-aggregate(cbind(units, dollars) ~ MARKET+CHAIN+store_type+iri_key+year+week, data = data.agg, sum, na.rm = TRUE)
head(sumunits)
sumunits<-rename(sumunits, c("units"="sumunits", "dollars"="sumdollars"))
data.agg <- merge(data.agg,sumunits,by=c("MARKET","CHAIN","store_type","iri_key","year","week"))
data.agg$share1<-data.agg$units/data.agg$sumunits*(data.agg$sumdollars/(data.agg$total_rev_carbbev/1))
withinshare<-aggregate(cbind(share1) ~ MARKET+CHAIN+store_type+iri_key+year+week, data = data.agg, sum, na.rm = TRUE)
withinshare<-rename(withinshare, c("share1"="shareog1"))
data.agg <- merge(data.agg,withinshare,by=c("MARKET","CHAIN","store_type","iri_key","year","week"))
data.agg$shareog1<-(1-data.agg$shareog1)
head(data.agg)
t1<-lm(log(share1)-log(shareog1)~-1+L5+yearfactor+(price)+display_minor+display_major+feature_small+feature_medium+feature_large+thanksgiving:FLAVOR.SCENT+christmas+newyearseve,data=data.agg)
summary(t1)
aggregate(cbind(units, price) ~ L4+L5+VOL_EQ+PACKAGE+FLAVOR.SCENT+CALORIE.LEVEL, data = data.agg, mean, na.rm = TRUE)
# Nested Logit: Diet vs Sugar first
sumunits.diet<-aggregate(cbind(units, dollars) ~ MARKET+CHAIN+store_type+iri_key+year+week+CALORIE.LEVEL, data = data.agg, sum, na.rm = TRUE)
sumunits.diet<-rename(sumunits.diet, c("units"="sumunits.diet", "dollars"="sumdollars.diet"))
data.agg <- merge(data.agg,sumunits.diet,by=c("MARKET","CHAIN","store_type","iri_key","year","week","CALORIE.LEVEL"))
data.agg$share.diet<-data.agg$units/data.agg$sumunits.diet
summary(data.agg)
head(data.agg,10)
nt<-lm(log(share1)-log(shareog1)~-1+log(share.diet)+L5+yearfactor+(price)+displayall+featureall,data=data.agg)
summary(nt)
# Nested Logit: Flavor first
sumunits.flavor<-aggregate(cbind(units, dollars) ~ MARKET+CHAIN+store_type+iri_key+year+week+FLAVOR.SCENT, data = data.agg, sum, na.rm = TRUE)
sumunits.flavor<-rename(sumunits.flavor, c("units"="sumunits.flavor", "dollars"="sumdollars.flavor"))
data.agg <- merge(data.agg,sumunits.flavor,by=c("MARKET","CHAIN","store_type","iri_key","year","week","FLAVOR.SCENT"))
data.agg$share.flavor<-data.agg$units/data.agg$sumunits.flavor
head(data.agg,10)
nt<-lm(log(share1)-log(shareog1)~-1+log(share.flavor)+L5+yearfactor+(price)+displayall+featureall,data=data.agg)
summary(nt)
head(data)
# 3-level nested logit
data<-data.agg
#data<-subset(data,data$FLAVOR.SCENT == "GINGER ALE")
data$group<-data$CALORIE.LEVEL
data$subgroup<-data$FLAVOR.SCENT
sumunits.subgroup<-aggregate(cbind(units, dollars) ~ MARKET+CHAIN+store_type+iri_key+year+week+group+subgroup, data = data, sum, na.rm = TRUE)
sumunits.subgroup<-rename(sumunits.subgroup, c("units"="sumunits.subgroup", "dollars"="sumdollars.subgroup"))
data <- merge(data,sumunits.subgroup,by=c("MARKET","CHAIN","store_type","iri_key","year","week","group","subgroup"))
sumunits.group<-aggregate(cbind(units, dollars) ~ MARKET+CHAIN+store_type+iri_key+year+week+group, data = data, sum, na.rm = TRUE)
sumunits.group<-rename(sumunits.group, c("units"="sumunits.group", "dollars"="sumdollars.group"))
data <- merge(data,sumunits.group,by=c("MARKET","CHAIN","store_type","iri_key","year","week","group"))
head(data,10)
data$share.hg<-data$sumunits.subgroup/data$sumunits.group
data$share.jhg<-data$units/data$sumunits.subgroup
nt<-lm(log(share1)-log(shareog1)~-1+log(share.hg)+log(share.jhg)+L5+y2011+(price)+displayall+featureall+thanksgiving+christmas+newyearseve,data=data)
summary(nt)
sigma.g<-nt$coefficients['log(share.hg)']
sigma.g
sigma.hg<-nt$coefficients['log(share.jhg)']
sigma.hg
alpha<-nt$coefficients['price']
alpha
share.jhg<-data$share.jhg
share.hg<-data$share.hg
share.j<-data$share1
price<-data$price
eta.jj<-(1/(1-sigma.hg)-(1/(1-sigma.hg)-1/(1-sigma.g))*share.jhg-sigma.g/(1-sigma.g)*share.jhg*share.hg-share.j)*alpha*price
eta.jk<-((1/(1-sigma.hg)-1/(1-sigma.g))*share.jhg+sigma.g/(1-sigma.g)*share.jhg*share.hg+share.j)*-alpha*price
eta.jkk<-(sigma.g/(1-sigma.g)*share.jhg*share.hg+share.j)*-alpha*price
eta.jkkk<-(share.j)*-alpha*price
mean(eta.jj)
data$etajj<-eta.jj
data$etajk<-eta.jk
data$etajkk<-eta.jkk
data$etajkkk<-eta.jkkk
aggregate(cbind(eta.jj,eta.jk,eta.jkk,eta.jkkk) ~ MARKET+CHAIN+store_type+L5+group+subgroup, data = data, mean, na.rm = TRUE)
summary(t1)
head(data.agg)
data$B1<-ifelse(data$L5=="MOUNTAIN DEW",1,0)
data$B2<-ifelse(data$L5=="DIET MOUNTAIN DEW",1,0)
data$B3<-ifelse(data$L5=="CANADA DRY",1,0)
data$B4<-ifelse(data$L5=="DIET CANADA DRY",1,0)
data$B5<-ifelse(data$L5=="SCHWEPPES",1,0)
summary(t1)
head(data.agg)
data<-read.csv("GingerAleLemonDew_Chain139.csv")
head(data)
str(data)
library(stringr)
data$FLAVOR.SCENT<-str_replace(data$FLAVOR.SCENT,"CITRUS DEW","DEW")
str(data)
raw<-read.csv("GingerAleLemonDew_Chain139.csv")
data.agg =  read.csv("data_agg.csv")
getwd9
emission = read.csv("../../emission.csv")
wd = "/Users/deepthought42/Dropbox/Studium/NLP/Maschinelle Sprachverarbeitung/3_POS-Tagging"
setwd(wd)
emission = read.csv("../../emission.csv")
emission[emission$tags == "in" & emission$words == "through"  ]
emission[emission$tags == "in" & emission$words == "through"  ,]
log(0.007219011)
?log
log(0.0007219011)
